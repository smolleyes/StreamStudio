//load modules
var vidinfo = require('vidinfo')({format:true});
var https = require('https');
var http= require('http');
var request = require('request');
var ip = require('ip');
var __ = require('underscore')
var ytl = require('youtube-dl');

// module vars
var current_search_page=1;
var videos_responses = new Array();
var dmotion = {};

// search for videos

dmotion.searchVideos = function (user_search,page,filters,order,cb) {
  console.log(user_search,page,filters,order,cb)
    var totalResults = 0;
    try{
       videos_responses = new Array();
         var url = 'https://api.dailymotion.com/videos?sort='+order+'&page='+page+'&limit=25&search='+user_search+'&fields=id&filters='+filters.replace('3dopt','3d');
    console.log(url)
    request(''+url+'', function(err, res, body) {
      console.log(err,res,body)
			if (err) return cb(err);
			if (res.statusCode !== 200) {
			  return cb(new Error('Video not found'));
			}
			cb(JSON.parse(body));
		});
    } catch(err){
        console.log('dailymotion searchVideos err: '+err);
    }
}

// search/browse channels
dmotion.categories = function (user_search,page,filters,category,cb) {
    var totalResults = 0;
    try{
       videos_responses = new Array();
       var req;
        if (user_search === '') {
            req=https.get('https://api.dailymotion.com/videos?sort=recent&page='+page+'&limit=25&fields=id&filters='+filters+'&channel='+category);
        } else {
            req=https.get('https://api.dailymotion.com/videos?sort=relevance&page='+page+'&limit=25&search='+user_search+'&fields=id&filters='+filters+'&channel='+category);
        }
        req.on('response',function(response) {
            var data = new Array();
            response.on("data", function(chunk) {
                data.push(chunk)
            });
            response.on('end',function(){
                var datas = JSON.parse(data.join(''));
                cb(datas);
            });
        });
        req.on('error', function(e) {
            console.log("Got error: " + e.message);
        });
        req.end();
    } catch(err){
        console.log('dailymotion searchVideos err: '+err);
    }
}

dmotion.lives = function (user_search,page,filters,cb) {
    var totalResults = 0;
    try{
       videos_responses = new Array();
       var req;
        if (user_search === '') {
            var url = 'http://'+ip.address()+':8091/?link=https://api.dailymotion.com/videos?sort=relevance&page='+page+'&limit=25&fields=onair,id,title,audience,thumbnail_240_url&filters=live';
        } else {
            var url = 'http://'+ip.address()+':8091/?link=https://api.dailymotion.com/videos?sort=relevance&page='+page+'&limit=25&search='+user_search+'&fields=onair,id,title,audience,thumbnail_240_url&filters=live';
        }
        request(''+url+'', function(err, res, body) {
            if (err) return cb(err);
            if (res.statusCode !== 200) {
              return cb(new Error('Video not found'));
            }
            cb(JSON.parse(body));
        });
    } catch(err){
        console.log('dailymotion live searchVideos err: '+err);
    }
}

//search related
dmotion.searchRelated = function (vid,page,filters,cb) {
    var totalResults = 0;
    try{
       videos_responses = new Array();
        var req=https.get('https://api.dailymotion.com/video/'+vid+'/related?page='+page+'&limit=10&fields=id');
        req.on('response',function(response) {
            var data = new Array();
            response.on("data", function(chunk) {
                data.push(chunk)
            });
            response.on('end',function(){
                var datas = JSON.parse(data.join(''));
                cb(datas);
            });
        });
        req.on('error', function(e) {
            console.log("Got error: " + e.message);
        });
        req.end();
    } catch(err){
        console.log('dailymotion searchVideos err: '+err);
    }
}


// get infos from video id
dmotion.getVideoInfos = function (id,num,total,cb) {
    var options = ["-j"];
    console.log('http://www.dailymotion.com/video/'+id)
    ytl.getInfo('http://www.dailymotion.com/video/'+id,options,function(err, item){
        console.log(item)
        try {
            var video = {};
            video.num=num;
            video.total=total;
            video.id = item.id;
            video.title = item.title;
            video.views = item.view_count;
            video.thumb =  item.thumbnails[0].url;
            video.author = item.uploader;
            video.duration = item.duration.indexOf(':') !== -1 ? hmsToSecondsOnly(item.duration) : item.duration;
            video.cb = cb;
            parseHtml(item.formats,video);
        } catch(err) {
            var video = {};
            video.num=num;
            video.total=total;
            try {
                storeVideosInfos(video);
            } catch(err) {
                video.cb('dailymotion parsehtml err : ' + err);
            }
        }
    });
}

function parseHtml(data, video){
    var resolutions = new Array();
    __.each(data,function(resol,v) {
        //console.log(data)
        var resolution = resol.height+'p';
        if(resol.protocol) {
            var link = resol.url;
            resolutions[resolution] = {};
            resolutions[resolution]['link'] = resol.url;
            resolutions[resolution]['container'] = 'mp4';
        }
    });
    video.resolutions=resolutions;
    try {
        storeVideosInfos(video);
    } catch(err) {
        video.cb('dailymotion parsehtml err : ' + err);
    }
}

function hmsToSecondsOnly(str) {
    var p = str.split(':'),
        s = 0,
        m = 1;
    while (p.length > 0) {
        s += m * parseInt(p.pop(), 10);
        m *= 60;
    }
    return s;
}

//search playlists

dmotion.searchPlaylists = function (user_search,page,cb){
    try{
        var url = 'http://'+ip.address()+':8091/?link=https://api.dailymotion.com/playlists?sort=relevance&page='+page+'&limit=25&search='+user_search+'&fields=id,description,owner.username,name,thumbnail_medium_url,videos_total';
		request(''+url+'', function(err, res, body) {
			if (err) return cb(err);
			if (res.statusCode !== 200) {
			  return cb(new Error('Video not found'));
			}
			cb(JSON.parse(body));
		});
        //req=https.get('https://api.dailymotion.com/playlists?sort=relevance&page='+page+'&limit=25&search='+user_search+'&fields=id,description,owner.username,name,thumbnail_medium_url,videos_total');
        //req.on('response',function(response) {
            //var data = new Array();
            //response.on("data", function(chunk) {
                //data.push(chunk);
            //});
            //response.on('end', function() {
                //var datas = JSON.parse(data.join(''));
                //cb(datas);
            //});
        //});
        //req.on('error', function(e) {
            //console.log("Got error: " + e.message);
        //});
        //req.end();
    } catch(err){
        console.log('dailymotion searchPlaylists err: '+err);
    }
}

dmotion.loadSongs = function(plid,length,page,cb){
    try{
		var url = 'http://'+ip.address()+':8091/?link=https://api.dailymotion.com/playlist/'+plid+'/videos?page='+page+'&limit=25';
		request(''+url+'', function(err, res, body) {
			if (err) return cb(err);
			if (res.statusCode !== 200) {
			  return cb(new Error('Video not found'));
			}
			cb(JSON.parse(body),length, plid, 'dailymotion');
		});
        //req=https.get('https://api.dailymotion.com/playlist/'+plid+'/videos?page='+page+'&limit=25');
            //req.on('response',function(response) {
                //var data = new Array();
                //response.on("data", function(chunk) {
                    //data.push(chunk)
                //});
                //response.on('end',function(){
                    //var datas = JSON.parse(data.join(''));
                    //cb(datas, length, plid, 'dailymotion');
                //});
            //});
        //req.on('error', function(e) {
            //console.log("Got error: " + e.message);
        //});
        //req.end();
    } catch(err) {
        console.log('dailymotion loadSongs err: '+err);
    }
}


// store videos and return it in the right order...
function storeVideosInfos(video) {
    videos_responses.push(video);
    if (videos_responses.length == video.total) {
        video.cb(videos_responses);
        videos_responses= new Array();
    }
}

function generateUUID() {
  var d = new Date().getTime();
  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      var r = (d + Math.random()*16)%16 | 0;
      d = Math.floor(d/16);
      return (c=='x' ? r : (r&0x3|0x8)).toString(16);
  });
  return uuid;
};


module.exports = dmotion;
